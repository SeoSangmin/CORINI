	0. CORINI AWS 설정 및 참고사항
	---------------------------
		2022.05.03.

	###########주의사항##########
	* aws 인스턴스 시작후 작업이 마무리되면 꼭 인스턴스 '중지'를 눌러주세요.
	* '종료'누르면 데이터가 날아가버리니까 주의해주세용.
	* aws에서 민감한 설정을 해야할 경우를 제외하고는 코드 작업은 개인 프로젝트에서 해주세요!(시간 절약하기!)


1. [ssh 접속]
	1-1) 본인의 로컬 컴퓨터의 workspace로 이동한다.
		.ssh
		- 위의 이름으로 된 폴더를 생성한다.
		- 메일로 받은 CORINI.pem 키를 .ssh 폴더에 위치시킨다.
	1-2) aws IAM 계정으로 로그인한다.
		- 인스턴스
		- CORINI 인스턴스를 시작한다. (새로운 인스턴스를 만들지 않는다.)
	1-3) 본인의 로컬 컴퓨터로 돌아와서 .ssh 폴더로 이동한다.
		- ssh -i "CORINI.pem" ubuntu@ec2-13-125-167-27.ap-northeast-2.compute.amazonaws.com
			- * 위의 명령어는 매번 달라진다. 
			- * 인스턴스 네임을 우클릭할시 뜨는 '연결'을 누른다.
			- * SSH 클라이언트 탭을 누른뒤 예: ~ 에 나온 명령어를 복사하면 된다.
		- 위의 명령어를 입력한다.
	
2. [참고한 글]
	- https://nerogarret.tistory.com/48
	- 위의 글을 참고해서 aws에 저희 프로젝트 CORINI를 클론했고
	- CORINI aws 인스턴스가 시작될 때마다 자동으로 페이지 서버가 켜지도록 설정하였습니다.(demon)

3. [우리의 기본 페이지에 들어가려면]
	# 05.04 이후 3-0)에 나온대로만 하면 된다.
	3-0) 'corini.site'에 접속한다.
	
	# 아래처럼 해도되지만 dns 구매후 연결했기 때문에 3-0)에 나온것처럼 하면 같은 동작을 수행한다.
	3-1) aws 페이지의 인스턴스 화면에 접속한다.
	3-2) CORINI를 클릭한다.
	3-3) 명시된 퍼블릭IPv4 DNS 주소를 복사한다.
	3-4) 웹브라우저에 복사한 주소를 붙여넣기한다.
	3-5) 장고 프로젝트- main 에서 생성한 템플릿 뷰가 나타난다.
	3-6) 웹브라우저의 주소에 '/admin'을 추가한다.
	3-7) nginx가 장고의 admin에 접근할 수 있고 css, javascript 등의 static file도잘 로드되어 깔끔한 화면이 나타나는 것을 볼 수 있다.


4. [CORINI 폴더 위치]
	/srv/CORINI

